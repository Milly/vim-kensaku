*kensaku.jax*				ローマ字による日本語検索機能を提供

Author:  Alisue <lambdalisue@gmail.com>
License: MIT License (See LICENSE)


=============================================================================
CONTENTS					*kensaku-contents*

INTRODUCTION			|kensaku-introduction|
REQUIREMENTS			|kensaku-requirements|
INTERFACE			|kensaku-interface|
  VARIABLES			  |kensaku-variables|
  FUNCTIONS			  |kensaku-functions|


=============================================================================
INTRODUCTION					*kensaku-introduction*

Kensaku (*kensaku.vim*) は Migemo を利用してローマ字のまま日本語検索を行う機能
を提供するプラグインです。既存の Migemo プラグインとは異なり JavaScript で実装
された jsmigemo を利用するため C/Migemo のインストールは不要です。

jemigemo		https://github.com/oguna/jsmigemo
C/Migemo		https://www.kaoriya.net/software/cmigemo/


=============================================================================
REQUIREMENTS					*kensaku-requirements*

denops.vim~
	An ecosystem for writing Vim/Neovim plugin in Deno.
	https://github.com/vim-denops/denops.vim


=============================================================================
INTERFACE					*kensaku-interface*

-----------------------------------------------------------------------------
VARIABLES					*kensaku-variables*

*g:kensaku_dictionary_url*
	ダウンロードする辞書ファイルの URL です。
	値を変更した場合は手動で |g:kensaku_dictionary_cache| に指定されている
	ファイルを削除する必要があります。

	デフォルトでは https://github.com/oguna/migemo-compact-dict-latest
	の v0.2 を利用します。

	Default: '...'

*g:kensaku_dictionary_cache*
	ダウンロードした辞書ファイルの格納先です。

	Default: `~/.cache/kensaku.vim/migemo-compact-dict`

-----------------------------------------------------------------------------
FUNCTIONS					*kensaku-functions*

						*kensaku#query()*
kensaku#query({value})
	{value} をローマ字として解釈し、検索するための正規表現を返します。
	結果を Vim スクリプトにて利用する場合は "\v" を前置して "very magic"
	として利用してください (|/magic| 参照)。
>
	function! Search(value) abort
	  let @/ = '\v' .. a:value
	  normal! n
	endfunction

	call Search(kensaku#query('kensaku'))
<
						*kensaku#query_async()*
kensaku#query_async({value}, {success}[, {failure}])
	|kensaku#query()| の非同期バージョンで、結果を {success} コールバックに
	渡します。エラー時は {failure} コールバックが呼ばれます。
>
	function! Search(value) abort
	  let @/ = '\v' .. a:value
	  normal! n
	endfunction

	call kensaku#query_async(
	      \ 'kensaku',
	      \ function('Search'),
	      \)
<

						*kensaku#set_roman_table()*
kensaku#set_roman_table({romanTable})
	ローマ字の変換ルールを定義します。azikなどに対応できます。
	{romanTable}は、[roman: string, hiragana: string, remain: number?]の配
	列です。romanがhiraganaに変換され、remainの数だけromanが残ります。例え
	ば、["qq", "っ", 1]は、「qq」を入力すると「っq」に変換されるルールにな
	ります。remainは省略可能で、その場合は0になります。
>
	call kensaku#set_roman_table([
	      \ ["qq", "っ", 1],
	      \ ["kz", "かん", 0],
	      \ ...
	      \])
<

=============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
